{"ast":null,"code":"import React from'react';import Circle from'../components/Circle';var seasonsStyle={display:'flex'};var colorCodes={winter:\"#01BFFF\",spring:\"#A7FC01\",summer:\"#FFFE00\",fall:\"#FF7F00\",white:\"#FFFFFF\"};function converter(s,month){var fc;var bc;if(month<=2||month===12){bc=colorCodes.winter;}else if(month>=3&&month<6){bc=colorCodes.spring;}else if(month>=6&&month<9){bc=colorCodes.summer;}else if(month>=9&&month<12){bc=colorCodes.fall;}else{bc=colorCodes.white;}if(s===\"\\u2713\"){fc=bc;}else{fc=colorCodes.white;}return React.createElement(Circle,{borderColor:bc,fillColor:fc});}export default function SeasonsContainer(_ref){var seasons=_ref.seasons;return React.createElement(\"div\",{style:seasonsStyle},converter(seasons[0],1),converter(seasons[1],2),converter(seasons[2],3),converter(seasons[3],4),converter(seasons[4],5),converter(seasons[5],6),converter(seasons[6],7),converter(seasons[7],8),converter(seasons[8],9),converter(seasons[9],10),converter(seasons[10],11),converter(seasons[11],12));}","map":{"version":3,"sources":["/Users/sungyeon/Projects/animal-crossing-db/src/containers/SeasonsContainer.tsx"],"names":["React","Circle","seasonsStyle","display","colorCodes","winter","spring","summer","fall","white","converter","s","month","fc","bc","SeasonsContainer","seasons"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,MADU,CAArB,CAIA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,MAAM,CAAE,SADS,CAEjBC,MAAM,CAAE,SAFS,CAGjBC,MAAM,CAAE,SAHS,CAIjBC,IAAI,CAAE,SAJW,CAKjBC,KAAK,CAAE,SALU,CAAnB,CAQA,QAASC,CAAAA,SAAT,CAAmBC,CAAnB,CAA8BC,KAA9B,CAA6C,CAC3C,GAAIC,CAAAA,EAAJ,CACA,GAAIC,CAAAA,EAAJ,CACA,GAAIF,KAAK,EAAI,CAAT,EAAcA,KAAK,GAAK,EAA5B,CAAgC,CAC9BE,EAAE,CAAGV,UAAU,CAACC,MAAhB,CACD,CAFD,IAGK,IAAIO,KAAK,EAAI,CAAT,EAAcA,KAAK,CAAG,CAA1B,CAA6B,CAChCE,EAAE,CAAGV,UAAU,CAACE,MAAhB,CACD,CAFI,IAGA,IAAIM,KAAK,EAAI,CAAT,EAAcA,KAAK,CAAG,CAA1B,CAA6B,CAChCE,EAAE,CAAGV,UAAU,CAACG,MAAhB,CACD,CAFI,IAGA,IAAIK,KAAK,EAAI,CAAT,EAAcA,KAAK,CAAG,EAA1B,CAA8B,CACjCE,EAAE,CAAGV,UAAU,CAACI,IAAhB,CACD,CAFI,IAGA,CACHM,EAAE,CAAGV,UAAU,CAACK,KAAhB,CACD,CACD,GAAIE,CAAC,GAAK,QAAV,CAAoB,CAClBE,EAAE,CAAGC,EAAL,CACD,CAFD,IAGK,CACHD,EAAE,CAAGT,UAAU,CAACK,KAAhB,CACD,CACD,MACE,qBAAC,MAAD,EACE,WAAW,CAAEK,EADf,CAEE,SAAS,CAAED,EAFb,EADF,CAMD,CACD,cAAe,SAASE,CAAAA,gBAAT,MAA8D,IAAlCC,CAAAA,OAAkC,MAAlCA,OAAkC,CAC3E,MACE,4BAAK,KAAK,CAAEd,YAAZ,EACGQ,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CADZ,CAEGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CAFZ,CAGGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CAHZ,CAKGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CALZ,CAMGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CANZ,CAOGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CAPZ,CASGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CATZ,CAUGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CAVZ,CAWGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,CAAb,CAXZ,CAaGN,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAAa,EAAb,CAbZ,CAcGN,SAAS,CAACM,OAAO,CAAC,EAAD,CAAR,CAAc,EAAd,CAdZ,CAeGN,SAAS,CAACM,OAAO,CAAC,EAAD,CAAR,CAAc,EAAd,CAfZ,CADF,CAmBD","sourcesContent":["import React from 'react';\nimport Circle from '../components/Circle';\n\ninterface SeasonsContainerProps {\n  seasons: string;\n}\n\nconst seasonsStyle = {\n  display: 'flex',\n};\n\nconst colorCodes = {\n  winter: \"#01BFFF\",\n  spring: \"#A7FC01\",\n  summer: \"#FFFE00\",\n  fall: \"#FF7F00\",\n  white: \"#FFFFFF\"\n};\n\nfunction converter(s: string, month: number) {\n  let fc;\n  let bc;\n  if (month <= 2 || month === 12) {\n    bc = colorCodes.winter;\n  }\n  else if (month >= 3 && month < 6) {\n    bc = colorCodes.spring;\n  }\n  else if (month >= 6 && month < 9) {\n    bc = colorCodes.summer;\n  } \n  else if (month >= 9 && month < 12) {\n    bc = colorCodes.fall;\n  }\n  else {\n    bc = colorCodes.white;\n  }\n  if (s === \"\\u2713\") {\n    fc = bc;\n  }\n  else {\n    fc = colorCodes.white;\n  }\n  return (\n    <Circle\n      borderColor={bc}\n      fillColor={fc}\n    />\n  )\n}\nexport default function SeasonsContainer({ seasons }: SeasonsContainerProps) {\n  return (\n    <div style={seasonsStyle}>\n      {converter(seasons[0], 1)}\n      {converter(seasons[1], 2)}\n      {converter(seasons[2], 3)}\n\n      {converter(seasons[3], 4)}\n      {converter(seasons[4], 5)}\n      {converter(seasons[5], 6)}\n\n      {converter(seasons[6], 7)}\n      {converter(seasons[7], 8)}\n      {converter(seasons[8], 9)}\n\n      {converter(seasons[9], 10)}\n      {converter(seasons[10], 11)}\n      {converter(seasons[11], 12)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}