{"version":3,"sources":["images/bug.png","images/fish.png","containers/IconsContainer.tsx","components/Circle.tsx","containers/SeasonsContainer.tsx","components/FishTable.tsx","components/BugsTable.tsx","App.tsx","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","display","justifyContent","margin","spacing","blue","backgroundColor","red","IconAvatars","setCategory","classes","className","Avatar","onClick","src","fishIcon","width","height","alt","bugIcon","Circle","borderColor","fillColor","cx","cy","r","stroke","strokeWidth","fill","seasonsStyle","colorCodes","converter","s","month","fc","bc","SeasonsContainer","seasons","style","table","minWidth","rows","SimpleTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","key","name","scope","imageLink","price","location","shadowSize","time","seasonsContainer","fishJSON","forEach","obj","push","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","bugsJson","App","useState","category","Typography","variant","gutterBottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2394f48d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bug.806efd53.png\";","module.exports = __webpack_public_path__ + \"static/media/fish.89bb41e2.png\";","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport bugIcon from '../../src/images/bug.png'\nimport fishIcon from '../../src/images/fish.png'\n\ninterface IconsContainerProps {\n  setCategory: (c: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'left',\n\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    blue: {\n      backgroundColor: '#88E1F2',\n    },\n    red: {\n      backgroundColor: '#FF7C7C',\n    },\n  }),\n);\n\nexport default function IconAvatars({setCategory}: IconsContainerProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar className={classes.blue} onClick={() => setCategory(\"fish\")} >\n        <img src={fishIcon} width=\"32px\" height=\"32px\" alt=\"fish\"/>\n      </Avatar>\n      <Avatar className={classes.red} onClick={() => setCategory(\"bugs\")}>\n        <img src={bugIcon} width=\"32px\" height=\"32px\" alt=\"bugs\"/>\n      </Avatar>\n    </div>\n  );\n}","import React from 'react';\n\ninterface CircleProps {\n  borderColor: string,\n  fillColor: string\n}\n\nexport default function Circle({ borderColor, fillColor }: CircleProps) {\n  return (\n    <div>\n      <svg height=\"12\" width=\"12\">\n        <circle cx={5} cy={5} r={4} stroke={borderColor} strokeWidth=\"1\" fill={fillColor} />\n      </svg>\n    </div>\n  );\n}\n","import React from 'react';\nimport Circle from '../components/Circle';\n\ninterface SeasonsContainerProps {\n  seasons: string;\n}\n\nconst seasonsStyle = {\n  display: 'flex',\n};\n\nconst colorCodes = {\n  winter: \"#01BFFF\",\n  spring: \"#A7FC01\",\n  summer: \"#FFFE00\",\n  fall: \"#FF7F00\",\n  white: \"#FFFFFF\"\n};\n\nfunction converter(s: string, month: number) {\n  let fc;\n  let bc;\n  if (month <= 2 || month === 12) {\n    bc = colorCodes.winter;\n  }\n  else if (month >= 3 && month < 6) {\n    bc = colorCodes.spring;\n  }\n  else if (month >= 6 && month < 9) {\n    bc = colorCodes.summer;\n  } \n  else if (month >= 9 && month < 12) {\n    bc = colorCodes.fall;\n  }\n  else {\n    bc = colorCodes.white;\n  }\n  if (s === \"\\u2713\") {\n    fc = bc;\n  }\n  else {\n    fc = colorCodes.white;\n  }\n  return (\n    <Circle\n      borderColor={bc}\n      fillColor={fc}\n    />\n  )\n}\nexport default function SeasonsContainer({ seasons }: SeasonsContainerProps) {\n  return (\n    <div style={seasonsStyle}>\n      {converter(seasons[0], 1)}\n      {converter(seasons[1], 2)}\n      {converter(seasons[2], 3)}\n\n      {converter(seasons[3], 4)}\n      {converter(seasons[4], 5)}\n      {converter(seasons[5], 6)}\n\n      {converter(seasons[6], 7)}\n      {converter(seasons[7], 8)}\n      {converter(seasons[8], 9)}\n\n      {converter(seasons[9], 10)}\n      {converter(seasons[10], 11)}\n      {converter(seasons[11], 12)}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport fishJSON from '../data/fish.json';\nimport SeasonsContainer from '../containers/SeasonsContainer';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\ninterface Fish {\n  name: string,\n  imageLink: string,\n  price: string,\n  location: string,\n  shadowSize: string,\n  time: string,\n  seasonsContainer: JSX.Element;\n}\n\nfunction createData(name: string, imageLink: string, price: string, location: string, shadowSize: string, time: string, seasons: string) {\n  let item: Fish = {\n    name: name,\n    imageLink: imageLink,\n    price: price,\n    location: location,\n    shadowSize: shadowSize,\n    time: time,\n    seasonsContainer: <SeasonsContainer seasons={seasons}/>,\n  };\n  return item;\n}\n\nlet rows: Fish[] = [];\nfishJSON.forEach(obj => {\n  rows.push(createData(obj.name, obj.imageLink, obj.price, obj.location, obj.shadowSize, obj.time, obj.jan + obj.feb + obj.mar + obj.apr + obj.may + obj.jun + obj.jul + obj.aug + obj.sep + obj.oct + obj.nov + obj.dec))\n});\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Image</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>Location</TableCell>\n            <TableCell>Shadow Size</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Seasons</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                <img src={row.imageLink} alt={row.name} width=\"64\" height=\"64\"/>\n              </TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.price}</TableCell>\n              <TableCell>{row.location}</TableCell>\n              <TableCell>{row.shadowSize}</TableCell>\n              <TableCell>{row.time}</TableCell>\n              <TableCell>{row.seasonsContainer}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport bugsJson from '../data/bugs.json';\nimport SeasonsContainer from '../containers/SeasonsContainer';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\ninterface Bug {\n  name: string,\n  imageLink: string,\n  price: string,\n  location: string,\n  time: string,\n  seasonsContainer: JSX.Element;\n}\n\nfunction createData(name: string, imageLink: string, price: string, location: string, time: string, seasons: string) {\n  let item: Bug = {\n    name: name,\n    imageLink: imageLink,\n    price: price,\n    location: location,\n    time: time,\n    seasonsContainer: <SeasonsContainer seasons={seasons}/>,\n  };\n  return item;\n}\n// change image to imageLinks\nlet rows: Bug[] = [];\nbugsJson.forEach(obj => {\n  rows.push(createData(obj.name, obj.imageLink, obj.price, obj.location, obj.time, obj.jan + obj.feb + obj.mar + obj.apr + obj.may + obj.jun + obj.jul + obj.aug + obj.sep + obj.oct + obj.nov + obj.dec))\n});\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Image</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>Location</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Seasons</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                <img src={row.imageLink} alt={row.name} width=\"64\" height=\"64\"/>\n              </TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.price}</TableCell>\n              <TableCell>{row.location}</TableCell>\n              <TableCell>{row.time}</TableCell>\n              <TableCell>{row.seasonsContainer}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from 'react';\nimport IconsContainer from './containers/IconsContainer';\nimport FishTable from './components/FishTable';\nimport BugsTable from './components/BugsTable';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function App() {\n  const [category, setCategory] = useState(\"fish\");\n\n  let table;\n  if (category === \"fish\") {\n    table = <FishTable />;\n  }\n  else if (category === \"bugs\") {\n    table = <BugsTable />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"body1\" gutterBottom>\n        The below table is for Northern Hemisphere Time Sync/Zone. \n        This table can still be used in the Southern Hemisphere, add 6 to the months eg. March + 6 = September\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        Missing/Broken information is not Sungyeon's fault. Admins of animalcrossing.fandom.com have not uploaded data on time &#128544;\n      </Typography>\n      <IconsContainer\n        setCategory={setCategory}\n      />\n      {table}\n      <Typography variant=\"body2\" gutterBottom>\n        {/* v1.0 Data credits: animalcrossing.fandom.com/wiki/ */}\n        {/* v1.1 Data credits: animalcrossing.fandom.com/wiki/ */}\n        {/* v1.2 Data credits: animalcrossing.fandom.com/wiki/ */}\n        v1.3 Data credits: animalcrossing.fandom.com/wiki/\n      </Typography>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}